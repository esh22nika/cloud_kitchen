version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: chef_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chef_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15-alpine
    container_name: chef_postgres
    environment:
      POSTGRES_DB: distributed_chef
      POSTGRES_USER: chef_admin
      POSTGRES_PASSWORD: chef_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chef_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chef_admin -d distributed_chef"]
      interval: 30s
      timeout: 10s
      retries: 5

  dashboard:
    image: nginx:alpine
    container_name: chef_dashboard
    ports:
      - "80:80"
    volumes:
      - ./dashboard.html:/usr/share/nginx/html/index.html:ro
      - ./animated_storyboard.html:/usr/share/nginx/html/storyboard.html:ro
    networks:
      - chef_network

  load_balancer:
    build: . # Build the image from the Dockerfile in the current directory
    container_name: chef_load_balancer
    ports:
      - "8080:8080"
    volumes:
      - .:/app # Still useful for development to see code changes live
    networks:
      - chef_network

  prometheus:
    image: prom/prometheus:latest
    container_name: chef_prometheus
    ports:
      - "9090:9090"
    networks:
      - chef_network

  grafana:
    image: grafana/grafana:latest
    container_name: chef_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - chef_network

networks:
  chef_network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  grafana_data: